---
AWSTemplateFormatVersion: 2010-09-09

Description: Amazon Elastic File System - a file system to persist and share data among container instances. (qs-1ql5cpbi6)

Parameters:
  EnvironmentName:
    Description: An environment name that will be prefixed to resource names
    Type: String
  VPC:
    Description: VPC this ECS cluster should be deployed to
    Type: AWS::EC2::VPC::Id
  VPCCIDR:
    Description: CIDR for the VPC this ECS cluster should be deployed to
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    Type: String
  Subnets:
    Description: Two subnets this elastic file system should be deployed to
    Type: List<AWS::EC2::Subnet::Id>
  DeletionPolicy:
    AllowedValues:
      - Delete
      - Retain
    Default: Delete
    Description: Retain or delete the Amazon EFS resources after CloudFormation stack deletion.
    Type: String
  PerformanceMode:
    AllowedValues:
      - generalPurpose
      - maxIO
    Default: generalPurpose
    Description: Select the performance mode of the file system.
    Type: String

Conditions:
  Delete:
    !Equals [ !Ref DeletionPolicy, Delete ]
  Retain:
    !Equals [ !Ref DeletionPolicy, Retain ]

Mappings:
  Defaults:
    FileSystem:
      Encrypted: true
      Port: 2049

Resources:
  EFSSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VPC
      GroupDescription: The tasks/containers on the ECS Hosts get access to the EFS
      SecurityGroupIngress:
        # Only allow access to EFS from the hosts in VPC
        - IpProtocol: tcp
          FromPort: !FindInMap [ Defaults, FileSystem, Port ]
          ToPort: !FindInMap [ Defaults, FileSystem, Port ]
          CidrIp: !Ref VPCCIDR
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-EFS-SG
  ElasticFileSystemRetain:
    Type: AWS::EFS::FileSystem
    Condition: Retain
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      Encrypted: true
      KmsKeyId: !Ref 'AWS::NoValue'
      FileSystemTags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-EFS
      PerformanceMode: !Ref PerformanceMode
  ElasticFileSystemDelete:
    Type: AWS::EFS::FileSystem
    Condition: Delete
    DeletionPolicy: Delete
    Properties:
      Encrypted: true
      KmsKeyId: !Ref 'AWS::NoValue'
      FileSystemTags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-EFS
      PerformanceMode: !Ref PerformanceMode
  ElasticFileSystemMountTarget0Retain:
    Condition: Retain
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Type: AWS::EFS::MountTarget
    Properties:
      FileSystemId: !Ref ElasticFileSystemRetain
      SecurityGroups:
        - !Ref EFSSecurityGroup
      SubnetId: !Select [ 0, !Ref Subnets ]
  ElasticFileSystemMountTarget0Delete:
    Condition: Delete
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Type: AWS::EFS::MountTarget
    Properties:
      FileSystemId: !Ref ElasticFileSystemDelete
      SecurityGroups:
        - !Ref EFSSecurityGroup
      SubnetId: !Select [ 0, !Ref Subnets ]
  ElasticFileSystemMountTarget1Retain:
    Condition: Retain
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Type: AWS::EFS::MountTarget
    Properties:
      FileSystemId: !Ref ElasticFileSystemRetain
      SecurityGroups:
        - !Ref EFSSecurityGroup
      SubnetId: !Select [ 1, !Ref Subnets ]
  ElasticFileSystemMountTarget1Delete:
    Condition : Delete
    DeletionPolicy: Delete
    Type: AWS::EFS::MountTarget
    Properties:
      FileSystemId: !Ref ElasticFileSystemDelete
      SecurityGroups:
        - !Ref EFSSecurityGroup
      SubnetId: !Select [ 1, !Ref Subnets ]
 
Outputs:
  EFSSecurityGroup:
    Value: !Ref EFSSecurityGroup
  ElasticFileSystem:
    Value: !If [ Delete, !Ref ElasticFileSystemDelete, !Ref ElasticFileSystemRetain ]
  ElasticFileSystemDnsName:
    Description: DNS name for the Amazon EFS file system.
    Value: !Join [ '.', [ !If [ Delete, !Ref ElasticFileSystemDelete, !Ref ElasticFileSystemRetain ], 'efs', !Ref 'AWS::Region', 'amazonaws', 'com' ] ]
 